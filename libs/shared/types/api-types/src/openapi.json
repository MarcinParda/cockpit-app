{
  "openapi": "3.1.0",
  "info": { "title": "Cockpit API", "version": "0.1.0" },
  "paths": {
    "/api/v1/expenses": {
      "get": {
        "tags": ["ai-budget/expenses"],
        "summary": "List Expenses",
        "operationId": "list_expenses_api_v1_expenses_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Expense" },
                  "title": "Response List Expenses Api V1 Expenses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ai-budget/expenses"],
        "summary": "Create Expense",
        "operationId": "create_expense_api_v1_expenses_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ExpenseCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Expense" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/expenses/{expense_id}": {
      "get": {
        "tags": ["ai-budget/expenses"],
        "summary": "Get Expense",
        "operationId": "get_expense_api_v1_expenses__expense_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Expense Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Expense" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ai-budget/expenses"],
        "summary": "Update Expense",
        "operationId": "update_expense_api_v1_expenses__expense_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Expense Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ExpenseUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Expense" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ai-budget/expenses"],
        "summary": "Delete Expense",
        "operationId": "delete_expense_api_v1_expenses__expense_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "expense_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Expense Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "tags": ["ai-budget/categories"],
        "summary": "List Categories",
        "operationId": "list_categories_api_v1_categories_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Category" },
                  "title": "Response List Categories Api V1 Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ai-budget/categories"],
        "summary": "Create Category",
        "operationId": "create_category_api_v1_categories_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CategoryCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Category" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{category_id}": {
      "get": {
        "tags": ["ai-budget/categories"],
        "summary": "Get Category",
        "operationId": "get_category_api_v1_categories__category_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Category Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Category" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ai-budget/categories"],
        "summary": "Update Category",
        "operationId": "update_category_api_v1_categories__category_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Category Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CategoryUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Category" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ai-budget/categories"],
        "summary": "Delete Category",
        "operationId": "delete_category_api_v1_categories__category_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Category Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment_methods": {
      "get": {
        "tags": ["ai-budget/payment_methods"],
        "summary": "List Payment Methods",
        "operationId": "list_payment_methods_api_v1_payment_methods_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PaymentMethod" },
                  "title": "Response List Payment Methods Api V1 Payment Methods Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ai-budget/payment_methods"],
        "summary": "Create Payment Method",
        "operationId": "create_payment_method_api_v1_payment_methods_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentMethodCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentMethod" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment_methods/{payment_method_id}": {
      "get": {
        "tags": ["ai-budget/payment_methods"],
        "summary": "Get Payment Method",
        "operationId": "get_payment_method_api_v1_payment_methods__payment_method_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "payment_method_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Payment Method Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentMethod" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ai-budget/payment_methods"],
        "summary": "Update Payment Method",
        "operationId": "update_payment_method_api_v1_payment_methods__payment_method_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "payment_method_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Payment Method Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentMethodUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentMethod" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ai-budget/payment_methods"],
        "summary": "Delete Payment Method",
        "operationId": "delete_payment_method_api_v1_payment_methods__payment_method_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "payment_method_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Payment Method Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/todo/items": {
      "get": {
        "tags": ["todo/items"],
        "summary": "Get Todo Items",
        "description": "Retrieve todo items from projects the user has access to.",
        "operationId": "get_todo_items_api_v1_todo_items_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Field to sort by: id, name, created_at, updated_at, is_closed, completed_at",
              "default": "name",
              "title": "Sort By"
            },
            "description": "Field to sort by: id, name, created_at, updated_at, is_closed, completed_at"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort order: asc or desc",
              "default": "asc",
              "title": "Order"
            },
            "description": "Sort order: asc or desc"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TodoItem" },
                  "title": "Response Get Todo Items Api V1 Todo Items Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["todo/items"],
        "summary": "Create Todo Item",
        "description": "Create new todo item in a project the user has access to.",
        "operationId": "create_todo_item_api_v1_todo_items_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TodoItemCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TodoItem" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/todo/items/{item_id}": {
      "get": {
        "tags": ["todo/items"],
        "summary": "Get Todo Item",
        "description": "Get todo item by ID if the user has access to its project.",
        "operationId": "get_todo_item_api_v1_todo_items__item_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Item Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TodoItem" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["todo/items"],
        "summary": "Update Todo Item",
        "description": "Update a todo item if the user has access to its project.",
        "operationId": "update_todo_item_api_v1_todo_items__item_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Item Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TodoItemUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TodoItem" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["todo/items"],
        "summary": "Delete Todo Item",
        "description": "Delete a todo item if the user has access to its project.",
        "operationId": "delete_todo_item_api_v1_todo_items__item_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Item Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TodoItem" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/todo/projects": {
      "get": {
        "tags": ["todo/projects"],
        "summary": "List Todo Projects",
        "description": "List all todo projects the user owns or collaborates on.",
        "operationId": "list_todo_projects_api_v1_todo_projects_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TodoProject" },
                  "title": "Response List Todo Projects Api V1 Todo Projects Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["todo/projects"],
        "summary": "Create Todo Project",
        "description": "Create a new todo project owned by the current user.",
        "operationId": "create_todo_project_api_v1_todo_projects_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TodoProjectCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TodoProject" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/todo/projects/{todo_project_id}": {
      "get": {
        "tags": ["todo/projects"],
        "summary": "Get Todo Project",
        "description": "Get a specific todo project if the user has access.",
        "operationId": "get_todo_project_api_v1_todo_projects__todo_project_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "todo_project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Todo Project Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TodoProject" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["todo/projects"],
        "summary": "Update Todo Project",
        "description": "Update a todo project if the user has access and it's not a General project.",
        "operationId": "update_todo_project_api_v1_todo_projects__todo_project_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "todo_project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Todo Project Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TodoProjectUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TodoProject" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["todo/projects"],
        "summary": "Delete Todo Project",
        "description": "Delete a todo project if the user is the owner and it's not a General project.",
        "operationId": "delete_todo_project_api_v1_todo_projects__todo_project_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "todo_project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Todo Project Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/todo/projects/{todo_project_id}/collaborators": {
      "post": {
        "tags": ["todo/projects"],
        "summary": "Add Collaborator",
        "description": "Add a collaborator to a todo project.",
        "operationId": "add_collaborator_api_v1_todo_projects__todo_project_id__collaborators_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "todo_project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Todo Project Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoProjectCollaboratorCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoProjectCollaboratorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["todo/projects"],
        "summary": "List Collaborators",
        "description": "List all collaborators for a todo project.",
        "operationId": "list_collaborators_api_v1_todo_projects__todo_project_id__collaborators_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "todo_project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Todo Project Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoProjectCollaboratorResponse"
                  },
                  "title": "Response List Collaborators Api V1 Todo Projects  Todo Project Id  Collaborators Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/todo/projects/{todo_project_id}/collaborators/{user_id}": {
      "delete": {
        "tags": ["todo/projects"],
        "summary": "Remove Collaborator",
        "description": "Remove a collaborator from a todo project.",
        "operationId": "remove_collaborator_api_v1_todo_projects__todo_project_id__collaborators__user_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "todo_project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Todo Project Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/shared/ocr": {
      "post": {
        "tags": ["shared"],
        "summary": "Extract Text From Image",
        "description": "Extract text from an uploaded image using OCR (Optical Character Recognition).\n\nThis endpoint accepts image files in common formats (JPEG, PNG, TIFF, BMP, etc.)\nand uses Tesseract OCR to extract text content from the image with support for\nboth Polish and English characters.\n\n⚠️ **Important Notes:**\n- **Processing Time**: This endpoint performs intensive image processing and \n  may take several seconds to complete, especially for large images.\n- **Quality Requirements**: Best results are achieved with clear, high-quality \n  images with good contrast and minimal blur. Poor quality images may result \n  in inaccurate text extraction.\n\nThe endpoint includes specialized preprocessing for receipt images including:\n- Noise reduction and denoising\n- Contrast enhancement using CLAHE\n- Image sharpening\n- Adaptive binarization for varying lighting conditions\n- Morphological operations for text cleanup\n\nThe extracted text is automatically cleaned by removing extra whitespace\nand empty lines for better readability.",
        "operationId": "extract_text_from_image_api_v1_shared_ocr_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_extract_text_from_image_api_v1_shared_ocr_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OCRResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid file format",
            "content": {
              "application/json": {
                "example": {
                  "detail": "File must be an image (JPEG, PNG, TIFF, BMP, etc.)"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Image processing failed",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Error processing image: [specific error message]"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me/permissions": {
      "get": {
        "tags": ["shared/auth"],
        "summary": "Get Current User Permission",
        "description": "Get current user's permissions.",
        "operationId": "get_current_user_permission_api_v1_auth_me_permissions_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Permission" },
                  "title": "Response Get Current User Permission Api V1 Auth Me Permissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me/roles": {
      "get": {
        "tags": ["shared/auth"],
        "summary": "Get Current User Roles",
        "description": "Get current user's roles as a list of role names (strings).",
        "operationId": "get_current_user_roles_api_v1_auth_me_roles_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" },
                  "title": "Response Get Current User Roles Api V1 Auth Me Roles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["shared/auth"],
        "summary": "Login",
        "description": "Authenticate user with email and password.",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/change-password": {
      "post": {
        "tags": ["shared/auth"],
        "summary": "Change Password",
        "description": "Change current user's password.",
        "operationId": "change_password_api_v1_auth_change_password_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PasswordChangeRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordChangeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": ["shared/auth"],
        "summary": "Get Current User Info",
        "description": "Get current authenticated user information.",
        "operationId": "get_current_user_info_api_v1_auth_me_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserInfoResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": ["shared/auth"],
        "summary": "Refresh Tokens",
        "description": "Refresh access token using refresh token from cookie or request body.",
        "operationId": "refresh_tokens_api_v1_auth_refresh_post",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleRefreshResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": ["shared/auth"],
        "summary": "Logout",
        "description": "Logout the user by invalidating their tokens and clearing cookies.",
        "operationId": "logout_api_v1_auth_logout_post",
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/tokens/statistics": {
      "get": {
        "tags": ["shared/auth", "admin"],
        "summary": "Token Statistics",
        "description": "Get current token statistics for monitoring (admin only).\n\nReturns detailed statistics about:\n- Active tokens\n- Expired tokens  \n- Revoked tokens\n- Total counts",
        "operationId": "token_statistics_api_v1_auth_tokens_statistics_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Token Statistics Api V1 Auth Tokens Statistics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/cleanup/manual": {
      "post": {
        "tags": ["shared/auth", "admin"],
        "summary": "Trigger Manual Cleanup",
        "description": "Trigger a manual token cleanup operation (admin only).\n\nThis endpoint allows administrators to manually trigger\nthe cleanup process outside of the scheduled runs.\n\nNote: This should be used sparingly and primarily for\nmaintenance or emergency cleanup scenarios.",
        "operationId": "trigger_manual_cleanup_api_v1_auth_cleanup_manual_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Trigger Manual Cleanup Api V1 Auth Cleanup Manual Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/cleanup/dry-run": {
      "post": {
        "tags": ["shared/auth", "admin"],
        "summary": "Dry Run Cleanup",
        "description": "Perform a dry run of the token cleanup process (admin only).\n\nThis endpoint simulates the cleanup process without\nactually deleting any tokens, providing information\nabout what would be cleaned up.",
        "operationId": "dry_run_cleanup_api_v1_auth_cleanup_dry_run_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Dry Run Cleanup Api V1 Auth Cleanup Dry Run Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": ["shared/users", "admin"],
        "summary": "List Users",
        "description": "List all users with their roles (admin only).",
        "operationId": "list_users_api_v1_users_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of users to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of users to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of users to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of users to return"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserWithRole" },
                  "title": "Response List Users Api V1 Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["shared/users", "admin"],
        "summary": "Create New User",
        "description": "Create a new user account (admin only).",
        "operationId": "create_new_user_api_v1_users_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserWithRole" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": ["shared/users", "admin"],
        "summary": "Get User Details",
        "description": "Get detailed user information including permissions (admin only).",
        "operationId": "get_user_details_api_v1_users__user_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserWithPermissions" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["shared/users", "admin"],
        "summary": "Update User Info",
        "description": "Update user information (admin only).",
        "operationId": "update_user_info_api_v1_users__user_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserWithRole" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["shared/users", "admin"],
        "summary": "Delete User Account",
        "description": "Delete user account (admin only).",
        "operationId": "delete_user_account_api_v1_users__user_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/role": {
      "put": {
        "tags": ["shared/users", "admin"],
        "summary": "Change User Role",
        "description": "Change user's role (admin only).",
        "operationId": "change_user_role_api_v1_users__user_id__role_put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "role_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Role Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserWithRole" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/permissions": {
      "post": {
        "tags": ["shared/users", "admin"],
        "summary": "Assign Permissions To User",
        "description": "Assign permissions to user (admin only).",
        "operationId": "assign_permissions_to_user_api_v1_users__user_id__permissions_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserPermissionAssign" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPermissionAssignResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["shared/users", "admin"],
        "summary": "Get User Permissions Endpoint",
        "description": "Get all permissions assigned to a user (admin only).",
        "operationId": "get_user_permissions_endpoint_api_v1_users__user_id__permissions_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Permission" },
                  "title": "Response Get User Permissions Endpoint Api V1 Users  User Id  Permissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/permissions/{permission_id}": {
      "delete": {
        "tags": ["shared/users", "admin"],
        "summary": "Revoke Permission From User",
        "description": "Revoke specific permission from user (admin only).",
        "operationId": "revoke_permission_from_user_api_v1_users__user_id__permissions__permission_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Permission Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/reset-password": {
      "post": {
        "tags": ["shared/users", "admin"],
        "summary": "Reset User Password Endpoint",
        "description": "Reset user password (admin only).",
        "operationId": "reset_user_password_endpoint_api_v1_users__user_id__reset_password_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  { "$ref": "#/components/schemas/PasswordResetRequest" },
                  { "type": "null" }
                ],
                "title": "Reset Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles": {
      "get": {
        "tags": ["shared/roles", "admin"],
        "summary": "List All Roles",
        "description": "List all available user roles (admin only).",
        "operationId": "list_all_roles_api_v1_roles_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserRole" },
                  "title": "Response List All Roles Api V1 Roles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{role_id}/permissions": {
      "get": {
        "tags": ["shared/roles", "admin"],
        "summary": "Get Role Default Permissions",
        "description": "Get default permissions for a specific role (admin only).",
        "operationId": "get_role_default_permissions_api_v1_roles__role_id__permissions_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Role Id" }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Authorization"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Permission" },
                  "title": "Response Get Role Default Permissions Api V1 Roles  Role Id  Permissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/health/cleanup": {
      "get": {
        "tags": ["health"],
        "summary": "Cleanup Health Check",
        "description": "Get the health status of the token cleanup system.\n\nReturns information about:\n- Database connectivity\n- Scheduler status  \n- Current token statistics\n- System configuration",
        "operationId": "cleanup_health_check_health_cleanup_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Cleanup Health Check Health Cleanup Get"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["root"],
        "summary": "Read Root",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_extract_text_from_image_api_v1_shared_ocr_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_extract_text_from_image_api_v1_shared_ocr_post"
      },
      "Category": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["name", "id", "created_at", "updated_at"],
        "title": "Category"
      },
      "CategoryCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "CategoryCreate"
      },
      "CategoryUpdate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "parent_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Id"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "CategoryUpdate"
      },
      "Expense": {
        "properties": {
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "category_id": { "type": "integer", "title": "Category Id" },
          "payment_method_id": {
            "type": "integer",
            "title": "Payment Method Id"
          },
          "date": { "type": "string", "format": "date", "title": "Date" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "category_id",
          "payment_method_id",
          "date",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "Expense"
      },
      "ExpenseCreate": {
        "properties": {
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "category_id": { "type": "integer", "title": "Category Id" },
          "payment_method_id": {
            "type": "integer",
            "title": "Payment Method Id"
          },
          "date": { "type": "string", "format": "date", "title": "Date" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["amount", "category_id", "payment_method_id", "date"],
        "title": "ExpenseCreate"
      },
      "ExpenseUpdate": {
        "properties": {
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Amount"
          },
          "category_id": { "type": "integer", "title": "Category Id" },
          "payment_method_id": {
            "type": "integer",
            "title": "Payment Method Id"
          },
          "date": { "type": "string", "format": "date", "title": "Date" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["amount", "category_id", "payment_method_id", "date"],
        "title": "ExpenseUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "LoginRequest",
        "description": "Schema for login request."
      },
      "LoginResponse": {
        "properties": { "message": { "type": "string", "title": "Message" } },
        "type": "object",
        "required": ["message"],
        "title": "LoginResponse",
        "description": "Response model for login endpoint."
      },
      "OCRResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates whether the OCR operation was successful"
          },
          "extracted_text": {
            "type": "string",
            "title": "Extracted Text",
            "description": "The text extracted from the image, cleaned and formatted"
          },
          "filename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Filename",
            "description": "The original filename of the uploaded image"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "The MIME type of the uploaded image file"
          }
        },
        "type": "object",
        "required": ["success", "extracted_text", "filename", "content_type"],
        "title": "OCRResponse",
        "description": "Response model for OCR text extraction."
      },
      "PasswordChangeRequest": {
        "properties": {
          "current_password": { "type": "string", "title": "Current Password" },
          "new_password": { "type": "string", "title": "New Password" }
        },
        "type": "object",
        "required": ["current_password", "new_password"],
        "title": "PasswordChangeRequest",
        "description": "Schema for password change request."
      },
      "PasswordChangeResponse": {
        "properties": { "message": { "type": "string", "title": "Message" } },
        "type": "object",
        "required": ["message"],
        "title": "PasswordChangeResponse",
        "description": "Response model for password change endpoint."
      },
      "PasswordResetRequest": {
        "properties": {
          "new_password": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "New Password"
          }
        },
        "type": "object",
        "title": "PasswordResetRequest",
        "description": "Schema for password reset request."
      },
      "PasswordResetResponse": {
        "properties": {
          "message": { "type": "string", "title": "Message" },
          "new_password": { "type": "string", "title": "New Password" }
        },
        "type": "object",
        "required": ["message", "new_password"],
        "title": "PasswordResetResponse",
        "description": "Schema for password reset response."
      },
      "PaymentMethod": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["name", "id", "created_at", "updated_at"],
        "title": "PaymentMethod"
      },
      "PaymentMethodCreate": {
        "properties": { "name": { "type": "string", "title": "Name" } },
        "type": "object",
        "required": ["name"],
        "title": "PaymentMethodCreate"
      },
      "PaymentMethodUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "PaymentMethodUpdate"
      },
      "Permission": {
        "properties": {
          "feature_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feature Id"
          },
          "action_id": {
            "type": "string",
            "format": "uuid",
            "title": "Action Id"
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "feature_id",
          "action_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "Permission",
        "description": "Permission schema for API responses."
      },
      "SimpleRefreshResponse": {
        "properties": { "message": { "type": "string", "title": "Message" } },
        "type": "object",
        "required": ["message"],
        "title": "SimpleRefreshResponse",
        "description": "Simple response model for refresh endpoint."
      },
      "SimpleTodoProject": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "owner_id": { "type": "string", "title": "Owner Id" },
          "is_general": {
            "type": "boolean",
            "title": "Is General",
            "default": false
          }
        },
        "type": "object",
        "required": ["id", "name", "created_at", "updated_at", "owner_id"],
        "title": "SimpleTodoProject"
      },
      "TodoItem": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "shops": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Shops"
          },
          "project_id": { "type": "integer", "title": "Project Id" },
          "id": { "type": "integer", "title": "Id" },
          "is_closed": { "type": "boolean", "title": "Is Closed" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "completed_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Completed At"
          },
          "project": {
            "anyOf": [
              { "$ref": "#/components/schemas/SimpleTodoProject" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id",
          "id",
          "is_closed",
          "created_at",
          "updated_at"
        ],
        "title": "TodoItem"
      },
      "TodoItemCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "shops": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Shops"
          },
          "project_id": { "type": "integer", "title": "Project Id" }
        },
        "type": "object",
        "required": ["name", "project_id"],
        "title": "TodoItemCreate"
      },
      "TodoItemUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "is_closed": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Closed"
          },
          "shops": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Shops"
          },
          "completed_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Completed At"
          },
          "project_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Project Id"
          }
        },
        "type": "object",
        "title": "TodoItemUpdate"
      },
      "TodoProject": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "is_general": { "type": "boolean", "title": "Is General" },
          "collaborators": {
            "items": {
              "$ref": "#/components/schemas/TodoProjectCollaboratorResponse"
            },
            "type": "array",
            "title": "Collaborators"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at",
          "updated_at",
          "owner_id",
          "is_general"
        ],
        "title": "TodoProject"
      },
      "TodoProjectCollaboratorCreate": {
        "properties": {
          "user_id": { "type": "string", "format": "uuid", "title": "User Id" }
        },
        "type": "object",
        "required": ["user_id"],
        "title": "TodoProjectCollaboratorCreate"
      },
      "TodoProjectCollaboratorResponse": {
        "properties": {
          "user_id": { "type": "string", "format": "uuid", "title": "User Id" },
          "project_id": { "type": "integer", "title": "Project Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["user_id", "project_id", "created_at"],
        "title": "TodoProjectCollaboratorResponse"
      },
      "TodoProjectCreate": {
        "properties": { "name": { "type": "string", "title": "Name" } },
        "type": "object",
        "required": ["name"],
        "title": "TodoProjectCreate"
      },
      "TodoProjectUpdate": {
        "properties": { "name": { "type": "string", "title": "Name" } },
        "type": "object",
        "required": ["name"],
        "title": "TodoProjectUpdate"
      },
      "UserCreate": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "is_active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Active",
            "default": true
          },
          "password": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Password"
          },
          "role_id": { "type": "string", "format": "uuid", "title": "Role Id" }
        },
        "type": "object",
        "required": ["email", "role_id"],
        "title": "UserCreate",
        "description": "Schema for creating a new user."
      },
      "UserInfoResponse": {
        "properties": {
          "user_id": { "type": "string", "format": "uuid", "title": "User Id" },
          "email": { "type": "string", "title": "Email" },
          "is_active": { "type": "boolean", "title": "Is Active" },
          "password_changed": {
            "type": "boolean",
            "title": "Password Changed"
          },
          "created_at": { "type": "string", "title": "Created At" }
        },
        "type": "object",
        "required": [
          "user_id",
          "email",
          "is_active",
          "password_changed",
          "created_at"
        ],
        "title": "UserInfoResponse",
        "description": "Response model for user information endpoint."
      },
      "UserPermissionAssign": {
        "properties": {
          "permission_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Permission Ids"
          }
        },
        "type": "object",
        "required": ["permission_ids"],
        "title": "UserPermissionAssign",
        "description": "Schema for assigning permissions to user."
      },
      "UserPermissionAssignResponse": {
        "properties": {
          "message": { "type": "string", "title": "Message" },
          "assigned_permissions": {
            "type": "integer",
            "title": "Assigned Permissions"
          }
        },
        "type": "object",
        "required": ["message", "assigned_permissions"],
        "title": "UserPermissionAssignResponse",
        "description": "Response model for permission assignment endpoint."
      },
      "UserRole": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["name", "id", "created_at", "updated_at"],
        "title": "UserRole",
        "description": "Schema for user role response."
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              { "type": "string", "format": "email" },
              { "type": "null" }
            ],
            "title": "Email"
          },
          "is_active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Active"
          },
          "role_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Role Id"
          }
        },
        "type": "object",
        "title": "UserUpdate",
        "description": "Schema for updating a user."
      },
      "UserWithPermissions": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "is_active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Active",
            "default": true
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "role_id": { "type": "string", "format": "uuid", "title": "Role Id" },
          "password_changed": {
            "type": "boolean",
            "title": "Password Changed"
          },
          "created_by": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "role": { "$ref": "#/components/schemas/UserRole" },
          "permissions": {
            "items": { "$ref": "#/components/schemas/Permission" },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "role_id",
          "password_changed",
          "created_at",
          "updated_at",
          "role",
          "permissions"
        ],
        "title": "UserWithPermissions",
        "description": "User schema with permissions information."
      },
      "UserWithRole": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "is_active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Active",
            "default": true
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "role_id": { "type": "string", "format": "uuid", "title": "Role Id" },
          "password_changed": {
            "type": "boolean",
            "title": "Password Changed"
          },
          "created_by": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "role": { "$ref": "#/components/schemas/UserRole" }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "role_id",
          "password_changed",
          "created_at",
          "updated_at",
          "role"
        ],
        "title": "UserWithRole",
        "description": "User schema with role information."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": { "HTTPBearer": { "type": "http", "scheme": "bearer" } }
  }
}
