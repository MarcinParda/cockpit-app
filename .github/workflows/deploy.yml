name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  # build-and-test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "20"
  #         cache: "npm"

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Create Angular environment files
  #       run: |
  #         mkdir -p src/environments
  #         cat > src/environments/environment.production.ts << EOL
  #         export const environment = {
  #           production: true,
  #           apiUrl: '${{ secrets.API_URL || 'http://localhost:8000' }}',
  #         };
  #         EOL

  #     - name: Build
  #       run: npm run build

  #     - name: Test
  #       run: npm run test:ci

  deploy:
    # needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install cloudflared
        run: |
          curl -L https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-archive-keyring.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/cloudflare-archive-keyring.gpg] https://pkg.cloudflare.com/cloudflared $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflared.list
          sudo apt-get update
          sudo apt-get install cloudflared

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.RASPBERRY_PI_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Add SSH config for Cloudflare Tunnel
        env:
          TUNNEL_DOMAIN: ${{ secrets.CLOUDFLARE_TUNNEL_DOMAIN }}
          PI_USERNAME: ${{ secrets.RASPBERRY_PI_USERNAME }}
        run: |
          echo "Host ${TUNNEL_DOMAIN}
          User ${PI_USERNAME}
          IdentityFile ~/.ssh/id_ed25519
          ProxyCommand cloudflared access ssh --hostname %h
          " > ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Install ssh-keyscan & add known_hosts
        env:
          TUNNEL_DOMAIN: ${{ secrets.CLOUDFLARE_TUNNEL_DOMAIN }}
        run: |
          sudo apt-get install -y openssh-client
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          ssh-keyscan ${TUNNEL_DOMAIN} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        env:
          TUNNEL_DOMAIN: ${{ secrets.CLOUDFLARE_TUNNEL_DOMAIN }}
        run: |
          for i in {1..5}; do
            ssh ${TUNNEL_DOMAIN} "cd ~/cockpit-app && \
            git pull origin master && \
            docker compose down && \
            docker compose up -d --build" && break || sleep 5
          done
