name: Deploy All Apps

on:
  workflow_dispatch:

jobs:
  validate-types:
    name: Validate API Types
    uses: ./.github/workflows/validate-types.yml

  build-test-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Important for pushing to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Replace environments.ts with secret ENVIRONMENTS
        run: |
          echo "${{ secrets.ENVIRONMENTS }}" > libs/shared/utils/src/lib/environments/environments.ts

      - name: Install dependencies
        run: npm ci

      - name: Build all apps
        run: npx nx run-many --target=lint,build,test --projects=ai-budget,todo,login,cockpit --parallel=4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push Docker image for ai-budget
      - name: Build and push Docker image for ai-budget
        if: ${{ always() }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/ai-budget/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-ai-budget:latest
            ghcr.io/${{ github.repository }}-ai-budget:${{ github.sha }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Docker image for todo
      - name: Build and push Docker image for todo
        if: ${{ always() }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/todo/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-todo:latest
            ghcr.io/${{ github.repository }}-todo:${{ github.sha }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Docker image for login
      - name: Build and push Docker image for login
        if: ${{ always() }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/login/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-login:latest
            ghcr.io/${{ github.repository }}-login:${{ github.sha }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Docker image for cockpit
      - name: Build and push Docker image for cockpit
        if: ${{ always() }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/cockpit/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-cockpit:latest
            ghcr.io/${{ github.repository }}-cockpit:${{ github.sha }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-raspberry:
    needs: [validate-types, build-test-and-push]
    uses: ./.github/workflows/deploy-to-production.yml
    secrets:
      CLOUDFLARE_TUNNEL_DOMAIN: ${{ secrets.CLOUDFLARE_TUNNEL_DOMAIN }}
      RASPBERRY_PI_USERNAME: ${{ secrets.RASPBERRY_PI_USERNAME }}
      RASPBERRY_PI_SSH_KEY: ${{ secrets.RASPBERRY_PI_SSH_KEY }}
      SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
