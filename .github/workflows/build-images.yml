name: Build and Push Docker Images

on:
  workflow_call:
    inputs:
      image-tag:
        description: 'Tag for the Docker images'
        required: false
        default: ${{ github.sha }}
        type: string
      push-latest:
        description: 'Also tag and push as latest'
        required: false
        default: true
        type: boolean
    outputs:
      image-tag:
        description: 'The image tag that was built and pushed'
        value: ${{ jobs.build-images.outputs.image-tag }}
      todo-image:
        description: 'Full todo image name with tag'
        value: ${{ jobs.build-images.outputs.todo-image }}
      ai-budget-image:
        description: 'Full ai-budget image name with tag'
        value: ${{ jobs.build-images.outputs.ai-budget-image }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_PREFIX: ${{ github.repository }}

jobs:
  build-images:
    runs-on: ubuntu-latest
    name: Build and Push Images
    outputs:
      image-tag: ${{ steps.vars.outputs.image-tag }}
      todo-image: ${{ steps.vars.outputs.todo-image }}
      ai-budget-image: ${{ steps.vars.outputs.ai-budget-image }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up variables
        id: vars
        run: |
          IMAGE_TAG="${{ inputs.image-tag }}"
          REPO_LOWER=$(echo "${{ env.IMAGE_NAME_PREFIX }}" | tr '[:upper:]' '[:lower:]')
          echo "image-tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "repo-lower=${REPO_LOWER}" >> $GITHUB_OUTPUT
          echo "todo-image=${REGISTRY}/${REPO_LOWER}/todo:${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "ai-budget-image=${REGISTRY}/${REPO_LOWER}/ai-budget:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Todo app
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/todo/Dockerfile
          push: true
          tags: |
            ${{ steps.vars.outputs.todo-image }}
            ${{ inputs.push-latest && format('{0}/{1}/todo:latest', env.REGISTRY, steps.vars.outputs.repo-lower) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Build and push AI Budget app
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/ai-budget/Dockerfile
          push: true
          tags: |
            ${{ steps.vars.outputs.ai-budget-image }}
            ${{ inputs.push-latest && format('{0}/{1}/ai-budget:latest', env.REGISTRY, steps.vars.outputs.repo-lower) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Build Summary
        run: |
          echo "🐳 Docker Images Built and Pushed Successfully!"
          echo "============================================="
          echo "📦 Todo App: ${{ steps.vars.outputs.todo-image }}"
          echo "📦 AI Budget App: ${{ steps.vars.outputs.ai-budget-image }}"
          echo "🏷️ Image Tag: ${{ steps.vars.outputs.image-tag }}"
          echo "🚀 Registry: ${{ env.REGISTRY }}"
          if [[ "${{ inputs.push-latest }}" == "true" ]]; then
            echo "✅ Also tagged as 'latest'"
          fi
          echo ""
          echo "Images are ready for deployment! 🎉"
